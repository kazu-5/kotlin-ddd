/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.X$schemaTableStatisticsWithBufferRecord;

import java.math.BigInteger;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE extends TableImpl<X$schemaTableStatisticsWithBufferRecord> {

    private static final long serialVersionUID = -932144957;

    /**
     * The reference instance of <code>sys.x$schema_table_statistics_with_buffer</code>
     */
    public static final X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER = new X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$schemaTableStatisticsWithBufferRecord> getRecordType() {
        return X$schemaTableStatisticsWithBufferRecord.class;
    }

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.table_schema</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, String> TABLE_SCHEMA = createField(DSL.name("table_schema"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.table_name</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, String> TABLE_NAME = createField(DSL.name("table_name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.rows_fetched</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> ROWS_FETCHED = createField(DSL.name("rows_fetched"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.fetch_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> FETCH_LATENCY = createField(DSL.name("fetch_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.rows_inserted</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> ROWS_INSERTED = createField(DSL.name("rows_inserted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.insert_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> INSERT_LATENCY = createField(DSL.name("insert_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.rows_updated</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> ROWS_UPDATED = createField(DSL.name("rows_updated"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.update_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> UPDATE_LATENCY = createField(DSL.name("update_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.rows_deleted</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> ROWS_DELETED = createField(DSL.name("rows_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.delete_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, ULong> DELETE_LATENCY = createField(DSL.name("delete_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_read_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_READ_REQUESTS = createField(DSL.name("io_read_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_read</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_READ = createField(DSL.name("io_read"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_read_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_READ_LATENCY = createField(DSL.name("io_read_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_write_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_WRITE_REQUESTS = createField(DSL.name("io_write_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_write</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_WRITE = createField(DSL.name("io_write"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_write_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_WRITE_LATENCY = createField(DSL.name("io_write_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_misc_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_MISC_REQUESTS = createField(DSL.name("io_misc_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.io_misc_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> IO_MISC_LATENCY = createField(DSL.name("io_misc_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_allocated</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> INNODB_BUFFER_ALLOCATED = createField(DSL.name("innodb_buffer_allocated"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(43), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_data</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> INNODB_BUFFER_DATA = createField(DSL.name("innodb_buffer_data"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(43), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_free</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> INNODB_BUFFER_FREE = createField(DSL.name("innodb_buffer_free"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(44), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_pages</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, Long> INNODB_BUFFER_PAGES = createField(DSL.name("innodb_buffer_pages"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_pages_hashed</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, Long> INNODB_BUFFER_PAGES_HASHED = createField(DSL.name("innodb_buffer_pages_hashed"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_pages_old</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, Long> INNODB_BUFFER_PAGES_OLD = createField(DSL.name("innodb_buffer_pages_old"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics_with_buffer.innodb_buffer_rows_cached</code>.
     */
    public final TableField<X$schemaTableStatisticsWithBufferRecord, BigInteger> INNODB_BUFFER_ROWS_CACHED = createField(DSL.name("innodb_buffer_rows_cached"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(44).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "");

    /**
     * Create a <code>sys.x$schema_table_statistics_with_buffer</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE() {
        this(DSL.name("x$schema_table_statistics_with_buffer"), null);
    }

    /**
     * Create an aliased <code>sys.x$schema_table_statistics_with_buffer</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(String alias) {
        this(DSL.name(alias), X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER);
    }

    /**
     * Create an aliased <code>sys.x$schema_table_statistics_with_buffer</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(Name alias) {
        this(alias, X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER);
    }

    private X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(Name alias, Table<X$schemaTableStatisticsWithBufferRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(Name alias, Table<X$schemaTableStatisticsWithBufferRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(Table<O> child, ForeignKey<O, X$schemaTableStatisticsWithBufferRecord> key) {
        super(child, key, X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE as(String alias) {
        return new X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(DSL.name(alias), this);
    }

    @Override
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE as(Name alias) {
        return new X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE rename(String name) {
        return new X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE rename(Name name) {
        return new X$SCHEMA_TABLE_STATISTICS_WITH_BUFFER_TABLE(name, null);
    }
}
