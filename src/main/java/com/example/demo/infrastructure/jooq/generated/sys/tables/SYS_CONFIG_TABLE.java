/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Indexes;
import com.example.demo.infrastructure.jooq.generated.sys.Keys;
import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.SysConfigRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SYS_CONFIG_TABLE extends TableImpl<SysConfigRecord> {

    private static final long serialVersionUID = -1950893241;

    /**
     * The reference instance of <code>sys.sys_config</code>
     */
    public static final SYS_CONFIG_TABLE SYS_CONFIG = new SYS_CONFIG_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysConfigRecord> getRecordType() {
        return SysConfigRecord.class;
    }

    /**
     * The column <code>sys.sys_config.variable</code>.
     */
    public final TableField<SysConfigRecord, String> VARIABLE = createField(DSL.name("variable"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>sys.sys_config.value</code>.
     */
    public final TableField<SysConfigRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>sys.sys_config.set_time</code>.
     */
    public final TableField<SysConfigRecord, Timestamp> SET_TIME = createField(DSL.name("set_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>sys.sys_config.set_by</code>.
     */
    public final TableField<SysConfigRecord, String> SET_BY = createField(DSL.name("set_by"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>sys.sys_config</code> table reference
     */
    public SYS_CONFIG_TABLE() {
        this(DSL.name("sys_config"), null);
    }

    /**
     * Create an aliased <code>sys.sys_config</code> table reference
     */
    public SYS_CONFIG_TABLE(String alias) {
        this(DSL.name(alias), SYS_CONFIG);
    }

    /**
     * Create an aliased <code>sys.sys_config</code> table reference
     */
    public SYS_CONFIG_TABLE(Name alias) {
        this(alias, SYS_CONFIG);
    }

    private SYS_CONFIG_TABLE(Name alias, Table<SysConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private SYS_CONFIG_TABLE(Name alias, Table<SysConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SYS_CONFIG_TABLE(Table<O> child, ForeignKey<O, SysConfigRecord> key) {
        super(child, key, SYS_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_CONFIG_PRIMARY);
    }

    @Override
    public UniqueKey<SysConfigRecord> getPrimaryKey() {
        return Keys.KEY_SYS_CONFIG_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<SysConfigRecord>>asList(Keys.KEY_SYS_CONFIG_PRIMARY);
    }

    @Override
    public SYS_CONFIG_TABLE as(String alias) {
        return new SYS_CONFIG_TABLE(DSL.name(alias), this);
    }

    @Override
    public SYS_CONFIG_TABLE as(Name alias) {
        return new SYS_CONFIG_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SYS_CONFIG_TABLE rename(String name) {
        return new SYS_CONFIG_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SYS_CONFIG_TABLE rename(Name name) {
        return new SYS_CONFIG_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
