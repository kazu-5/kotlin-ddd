/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.performance_schema.tables;


import com.example.demo.infrastructure.jooq.generated.performance_schema.PerformanceSchema;
import com.example.demo.infrastructure.jooq.generated.performance_schema.enums.EventsStagesHistoryNestingEventType;
import com.example.demo.infrastructure.jooq.generated.performance_schema.tables.records.EventsStagesHistoryRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EVENTS_STAGES_HISTORY_TABLE extends TableImpl<EventsStagesHistoryRecord> {

    private static final long serialVersionUID = 289982654;

    /**
     * The reference instance of <code>performance_schema.events_stages_history</code>
     */
    public static final EVENTS_STAGES_HISTORY_TABLE EVENTS_STAGES_HISTORY = new EVENTS_STAGES_HISTORY_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventsStagesHistoryRecord> getRecordType() {
        return EventsStagesHistoryRecord.class;
    }

    /**
     * The column <code>performance_schema.events_stages_history.THREAD_ID</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> THREAD_ID = createField(DSL.name("THREAD_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_history.EVENT_ID</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> EVENT_ID = createField(DSL.name("EVENT_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_history.END_EVENT_ID</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> END_EVENT_ID = createField(DSL.name("END_EVENT_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.EVENT_NAME</code>.
     */
    public final TableField<EventsStagesHistoryRecord, String> EVENT_NAME = createField(DSL.name("EVENT_NAME"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_history.SOURCE</code>.
     */
    public final TableField<EventsStagesHistoryRecord, String> SOURCE = createField(DSL.name("SOURCE"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>performance_schema.events_stages_history.TIMER_START</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> TIMER_START = createField(DSL.name("TIMER_START"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.TIMER_END</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> TIMER_END = createField(DSL.name("TIMER_END"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.TIMER_WAIT</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> TIMER_WAIT = createField(DSL.name("TIMER_WAIT"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.WORK_COMPLETED</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> WORK_COMPLETED = createField(DSL.name("WORK_COMPLETED"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.WORK_ESTIMATED</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> WORK_ESTIMATED = createField(DSL.name("WORK_ESTIMATED"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.NESTING_EVENT_ID</code>.
     */
    public final TableField<EventsStagesHistoryRecord, ULong> NESTING_EVENT_ID = createField(DSL.name("NESTING_EVENT_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_history.NESTING_EVENT_TYPE</code>.
     */
    public final TableField<EventsStagesHistoryRecord, EventsStagesHistoryNestingEventType> NESTING_EVENT_TYPE = createField(DSL.name("NESTING_EVENT_TYPE"), org.jooq.impl.SQLDataType.VARCHAR(11).asEnumDataType(com.example.demo.infrastructure.jooq.generated.performance_schema.enums.EventsStagesHistoryNestingEventType.class), this, "");

    /**
     * Create a <code>performance_schema.events_stages_history</code> table reference
     */
    public EVENTS_STAGES_HISTORY_TABLE() {
        this(DSL.name("events_stages_history"), null);
    }

    /**
     * Create an aliased <code>performance_schema.events_stages_history</code> table reference
     */
    public EVENTS_STAGES_HISTORY_TABLE(String alias) {
        this(DSL.name(alias), EVENTS_STAGES_HISTORY);
    }

    /**
     * Create an aliased <code>performance_schema.events_stages_history</code> table reference
     */
    public EVENTS_STAGES_HISTORY_TABLE(Name alias) {
        this(alias, EVENTS_STAGES_HISTORY);
    }

    private EVENTS_STAGES_HISTORY_TABLE(Name alias, Table<EventsStagesHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EVENTS_STAGES_HISTORY_TABLE(Name alias, Table<EventsStagesHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EVENTS_STAGES_HISTORY_TABLE(Table<O> child, ForeignKey<O, EventsStagesHistoryRecord> key) {
        super(child, key, EVENTS_STAGES_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public EVENTS_STAGES_HISTORY_TABLE as(String alias) {
        return new EVENTS_STAGES_HISTORY_TABLE(DSL.name(alias), this);
    }

    @Override
    public EVENTS_STAGES_HISTORY_TABLE as(Name alias) {
        return new EVENTS_STAGES_HISTORY_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EVENTS_STAGES_HISTORY_TABLE rename(String name) {
        return new EVENTS_STAGES_HISTORY_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EVENTS_STAGES_HISTORY_TABLE rename(Name name) {
        return new EVENTS_STAGES_HISTORY_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<ULong, ULong, ULong, String, String, ULong, ULong, ULong, ULong, ULong, ULong, EventsStagesHistoryNestingEventType> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
