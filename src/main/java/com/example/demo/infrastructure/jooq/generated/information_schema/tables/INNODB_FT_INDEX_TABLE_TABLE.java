/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.information_schema.tables;


import com.example.demo.infrastructure.jooq.generated.information_schema.InformationSchema;
import com.example.demo.infrastructure.jooq.generated.information_schema.tables.records.InnodbFtIndexTableRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class INNODB_FT_INDEX_TABLE_TABLE extends TableImpl<InnodbFtIndexTableRecord> {

    private static final long serialVersionUID = 191136260;

    /**
     * The reference instance of <code>information_schema.INNODB_FT_INDEX_TABLE</code>
     */
    public static final INNODB_FT_INDEX_TABLE_TABLE INNODB_FT_INDEX_TABLE = new INNODB_FT_INDEX_TABLE_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbFtIndexTableRecord> getRecordType() {
        return InnodbFtIndexTableRecord.class;
    }

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.WORD</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, String> WORD = createField(DSL.name("WORD"), org.jooq.impl.SQLDataType.VARCHAR(337).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.FIRST_DOC_ID</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, ULong> FIRST_DOC_ID = createField(DSL.name("FIRST_DOC_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.LAST_DOC_ID</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, ULong> LAST_DOC_ID = createField(DSL.name("LAST_DOC_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.DOC_COUNT</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, ULong> DOC_COUNT = createField(DSL.name("DOC_COUNT"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.DOC_ID</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, ULong> DOC_ID = createField(DSL.name("DOC_ID"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_FT_INDEX_TABLE.POSITION</code>.
     */
    public final TableField<InnodbFtIndexTableRecord, ULong> POSITION = createField(DSL.name("POSITION"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>information_schema.INNODB_FT_INDEX_TABLE</code> table reference
     */
    public INNODB_FT_INDEX_TABLE_TABLE() {
        this(DSL.name("INNODB_FT_INDEX_TABLE"), null);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_FT_INDEX_TABLE</code> table reference
     */
    public INNODB_FT_INDEX_TABLE_TABLE(String alias) {
        this(DSL.name(alias), INNODB_FT_INDEX_TABLE);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_FT_INDEX_TABLE</code> table reference
     */
    public INNODB_FT_INDEX_TABLE_TABLE(Name alias) {
        this(alias, INNODB_FT_INDEX_TABLE);
    }

    private INNODB_FT_INDEX_TABLE_TABLE(Name alias, Table<InnodbFtIndexTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private INNODB_FT_INDEX_TABLE_TABLE(Name alias, Table<InnodbFtIndexTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> INNODB_FT_INDEX_TABLE_TABLE(Table<O> child, ForeignKey<O, InnodbFtIndexTableRecord> key) {
        super(child, key, INNODB_FT_INDEX_TABLE);
    }

    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    public INNODB_FT_INDEX_TABLE_TABLE as(String alias) {
        return new INNODB_FT_INDEX_TABLE_TABLE(DSL.name(alias), this);
    }

    @Override
    public INNODB_FT_INDEX_TABLE_TABLE as(Name alias) {
        return new INNODB_FT_INDEX_TABLE_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public INNODB_FT_INDEX_TABLE_TABLE rename(String name) {
        return new INNODB_FT_INDEX_TABLE_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public INNODB_FT_INDEX_TABLE_TABLE rename(Name name) {
        return new INNODB_FT_INDEX_TABLE_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, ULong, ULong, ULong, ULong, ULong> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
