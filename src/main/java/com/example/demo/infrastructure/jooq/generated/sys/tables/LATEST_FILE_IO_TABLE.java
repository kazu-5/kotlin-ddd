/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.LatestFileIoRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LATEST_FILE_IO_TABLE extends TableImpl<LatestFileIoRecord> {

    private static final long serialVersionUID = 1881991423;

    /**
     * The reference instance of <code>sys.latest_file_io</code>
     */
    public static final LATEST_FILE_IO_TABLE LATEST_FILE_IO = new LATEST_FILE_IO_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LatestFileIoRecord> getRecordType() {
        return LatestFileIoRecord.class;
    }

    /**
     * The column <code>sys.latest_file_io.thread</code>.
     */
    public final TableField<LatestFileIoRecord, String> THREAD = createField(DSL.name("thread"), org.jooq.impl.SQLDataType.VARCHAR(149), this, "");

    /**
     * The column <code>sys.latest_file_io.file</code>.
     */
    public final TableField<LatestFileIoRecord, String> FILE = createField(DSL.name("file"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>sys.latest_file_io.latency</code>.
     */
    public final TableField<LatestFileIoRecord, String> LATENCY = createField(DSL.name("latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.latest_file_io.operation</code>.
     */
    public final TableField<LatestFileIoRecord, String> OPERATION = createField(DSL.name("operation"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>sys.latest_file_io.requested</code>.
     */
    public final TableField<LatestFileIoRecord, String> REQUESTED = createField(DSL.name("requested"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sys.latest_file_io</code> table reference
     */
    public LATEST_FILE_IO_TABLE() {
        this(DSL.name("latest_file_io"), null);
    }

    /**
     * Create an aliased <code>sys.latest_file_io</code> table reference
     */
    public LATEST_FILE_IO_TABLE(String alias) {
        this(DSL.name(alias), LATEST_FILE_IO);
    }

    /**
     * Create an aliased <code>sys.latest_file_io</code> table reference
     */
    public LATEST_FILE_IO_TABLE(Name alias) {
        this(alias, LATEST_FILE_IO);
    }

    private LATEST_FILE_IO_TABLE(Name alias, Table<LatestFileIoRecord> aliased) {
        this(alias, aliased, null);
    }

    private LATEST_FILE_IO_TABLE(Name alias, Table<LatestFileIoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> LATEST_FILE_IO_TABLE(Table<O> child, ForeignKey<O, LatestFileIoRecord> key) {
        super(child, key, LATEST_FILE_IO);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public LATEST_FILE_IO_TABLE as(String alias) {
        return new LATEST_FILE_IO_TABLE(DSL.name(alias), this);
    }

    @Override
    public LATEST_FILE_IO_TABLE as(Name alias) {
        return new LATEST_FILE_IO_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LATEST_FILE_IO_TABLE rename(String name) {
        return new LATEST_FILE_IO_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LATEST_FILE_IO_TABLE rename(Name name) {
        return new LATEST_FILE_IO_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
