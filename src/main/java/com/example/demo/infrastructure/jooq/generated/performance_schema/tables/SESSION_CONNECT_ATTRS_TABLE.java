/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.performance_schema.tables;


import com.example.demo.infrastructure.jooq.generated.performance_schema.PerformanceSchema;
import com.example.demo.infrastructure.jooq.generated.performance_schema.tables.records.SessionConnectAttrsRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SESSION_CONNECT_ATTRS_TABLE extends TableImpl<SessionConnectAttrsRecord> {

    private static final long serialVersionUID = -425813172;

    /**
     * The reference instance of <code>performance_schema.session_connect_attrs</code>
     */
    public static final SESSION_CONNECT_ATTRS_TABLE SESSION_CONNECT_ATTRS = new SESSION_CONNECT_ATTRS_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionConnectAttrsRecord> getRecordType() {
        return SessionConnectAttrsRecord.class;
    }

    /**
     * The column <code>performance_schema.session_connect_attrs.PROCESSLIST_ID</code>.
     */
    public final TableField<SessionConnectAttrsRecord, Integer> PROCESSLIST_ID = createField(DSL.name("PROCESSLIST_ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>performance_schema.session_connect_attrs.ATTR_NAME</code>.
     */
    public final TableField<SessionConnectAttrsRecord, String> ATTR_NAME = createField(DSL.name("ATTR_NAME"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>performance_schema.session_connect_attrs.ATTR_VALUE</code>.
     */
    public final TableField<SessionConnectAttrsRecord, String> ATTR_VALUE = createField(DSL.name("ATTR_VALUE"), org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>performance_schema.session_connect_attrs.ORDINAL_POSITION</code>.
     */
    public final TableField<SessionConnectAttrsRecord, Integer> ORDINAL_POSITION = createField(DSL.name("ORDINAL_POSITION"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>performance_schema.session_connect_attrs</code> table reference
     */
    public SESSION_CONNECT_ATTRS_TABLE() {
        this(DSL.name("session_connect_attrs"), null);
    }

    /**
     * Create an aliased <code>performance_schema.session_connect_attrs</code> table reference
     */
    public SESSION_CONNECT_ATTRS_TABLE(String alias) {
        this(DSL.name(alias), SESSION_CONNECT_ATTRS);
    }

    /**
     * Create an aliased <code>performance_schema.session_connect_attrs</code> table reference
     */
    public SESSION_CONNECT_ATTRS_TABLE(Name alias) {
        this(alias, SESSION_CONNECT_ATTRS);
    }

    private SESSION_CONNECT_ATTRS_TABLE(Name alias, Table<SessionConnectAttrsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SESSION_CONNECT_ATTRS_TABLE(Name alias, Table<SessionConnectAttrsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SESSION_CONNECT_ATTRS_TABLE(Table<O> child, ForeignKey<O, SessionConnectAttrsRecord> key) {
        super(child, key, SESSION_CONNECT_ATTRS);
    }

    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public SESSION_CONNECT_ATTRS_TABLE as(String alias) {
        return new SESSION_CONNECT_ATTRS_TABLE(DSL.name(alias), this);
    }

    @Override
    public SESSION_CONNECT_ATTRS_TABLE as(Name alias) {
        return new SESSION_CONNECT_ATTRS_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SESSION_CONNECT_ATTRS_TABLE rename(String name) {
        return new SESSION_CONNECT_ATTRS_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SESSION_CONNECT_ATTRS_TABLE rename(Name name) {
        return new SESSION_CONNECT_ATTRS_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
