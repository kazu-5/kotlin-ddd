/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.mysql;


import com.example.demo.infrastructure.jooq.generated.mysql.tables.COLUMNS_PRIV_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.DB_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.ENGINE_COST_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.EVENT_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.FUNC_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.GTID_EXECUTED_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.HELP_CATEGORY_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.HELP_KEYWORD_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.HELP_RELATION_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.HELP_TOPIC_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.INNODB_INDEX_STATS_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.INNODB_TABLE_STATS_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.NDB_BINLOG_INDEX_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.PLUGIN_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.PROCS_PRIV_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.PROC_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.PROXIES_PRIV_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.SERVERS_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.SERVER_COST_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.SLAVE_MASTER_INFO_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.SLAVE_RELAY_LOG_INFO_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.SLAVE_WORKER_INFO_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TABLES_PRIV_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TIME_ZONE_LEAP_SECOND_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TIME_ZONE_NAME_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TIME_ZONE_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TIME_ZONE_TRANSITION_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.TIME_ZONE_TRANSITION_TYPE_TABLE;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.USER_TABLE;

import javax.annotation.processing.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>mysql</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index COLUMNS_PRIV_PRIMARY = Indexes0.COLUMNS_PRIV_PRIMARY;
    public static final Index DB_PRIMARY = Indexes0.DB_PRIMARY;
    public static final Index DB_USER = Indexes0.DB_USER;
    public static final Index ENGINE_COST_PRIMARY = Indexes0.ENGINE_COST_PRIMARY;
    public static final Index EVENT_PRIMARY = Indexes0.EVENT_PRIMARY;
    public static final Index FUNC_PRIMARY = Indexes0.FUNC_PRIMARY;
    public static final Index GTID_EXECUTED_PRIMARY = Indexes0.GTID_EXECUTED_PRIMARY;
    public static final Index HELP_CATEGORY_NAME = Indexes0.HELP_CATEGORY_NAME;
    public static final Index HELP_CATEGORY_PRIMARY = Indexes0.HELP_CATEGORY_PRIMARY;
    public static final Index HELP_KEYWORD_NAME = Indexes0.HELP_KEYWORD_NAME;
    public static final Index HELP_KEYWORD_PRIMARY = Indexes0.HELP_KEYWORD_PRIMARY;
    public static final Index HELP_RELATION_PRIMARY = Indexes0.HELP_RELATION_PRIMARY;
    public static final Index HELP_TOPIC_NAME = Indexes0.HELP_TOPIC_NAME;
    public static final Index HELP_TOPIC_PRIMARY = Indexes0.HELP_TOPIC_PRIMARY;
    public static final Index INNODB_INDEX_STATS_PRIMARY = Indexes0.INNODB_INDEX_STATS_PRIMARY;
    public static final Index INNODB_TABLE_STATS_PRIMARY = Indexes0.INNODB_TABLE_STATS_PRIMARY;
    public static final Index NDB_BINLOG_INDEX_PRIMARY = Indexes0.NDB_BINLOG_INDEX_PRIMARY;
    public static final Index PLUGIN_PRIMARY = Indexes0.PLUGIN_PRIMARY;
    public static final Index PROC_PRIMARY = Indexes0.PROC_PRIMARY;
    public static final Index PROCS_PRIV_GRANTOR = Indexes0.PROCS_PRIV_GRANTOR;
    public static final Index PROCS_PRIV_PRIMARY = Indexes0.PROCS_PRIV_PRIMARY;
    public static final Index PROXIES_PRIV_GRANTOR = Indexes0.PROXIES_PRIV_GRANTOR;
    public static final Index PROXIES_PRIV_PRIMARY = Indexes0.PROXIES_PRIV_PRIMARY;
    public static final Index SERVERS_PRIMARY = Indexes0.SERVERS_PRIMARY;
    public static final Index SERVER_COST_PRIMARY = Indexes0.SERVER_COST_PRIMARY;
    public static final Index SLAVE_MASTER_INFO_PRIMARY = Indexes0.SLAVE_MASTER_INFO_PRIMARY;
    public static final Index SLAVE_RELAY_LOG_INFO_PRIMARY = Indexes0.SLAVE_RELAY_LOG_INFO_PRIMARY;
    public static final Index SLAVE_WORKER_INFO_PRIMARY = Indexes0.SLAVE_WORKER_INFO_PRIMARY;
    public static final Index TABLES_PRIV_GRANTOR = Indexes0.TABLES_PRIV_GRANTOR;
    public static final Index TABLES_PRIV_PRIMARY = Indexes0.TABLES_PRIV_PRIMARY;
    public static final Index TIME_ZONE_PRIMARY = Indexes0.TIME_ZONE_PRIMARY;
    public static final Index TIME_ZONE_LEAP_SECOND_PRIMARY = Indexes0.TIME_ZONE_LEAP_SECOND_PRIMARY;
    public static final Index TIME_ZONE_NAME_PRIMARY = Indexes0.TIME_ZONE_NAME_PRIMARY;
    public static final Index TIME_ZONE_TRANSITION_PRIMARY = Indexes0.TIME_ZONE_TRANSITION_PRIMARY;
    public static final Index TIME_ZONE_TRANSITION_TYPE_PRIMARY = Indexes0.TIME_ZONE_TRANSITION_TYPE_PRIMARY;
    public static final Index USER_PRIMARY = Indexes0.USER_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index COLUMNS_PRIV_PRIMARY = Internal.createIndex("PRIMARY", COLUMNS_PRIV_TABLE.COLUMNS_PRIV, new OrderField[] { COLUMNS_PRIV_TABLE.COLUMNS_PRIV.HOST, COLUMNS_PRIV_TABLE.COLUMNS_PRIV.DB, COLUMNS_PRIV_TABLE.COLUMNS_PRIV.USER, COLUMNS_PRIV_TABLE.COLUMNS_PRIV.TABLE_NAME, COLUMNS_PRIV_TABLE.COLUMNS_PRIV.COLUMN_NAME }, true);
        public static Index DB_PRIMARY = Internal.createIndex("PRIMARY", DB_TABLE.DB, new OrderField[] { DB_TABLE.DB.HOST, DB_TABLE.DB.DB_, DB_TABLE.DB.USER }, true);
        public static Index DB_USER = Internal.createIndex("User", DB_TABLE.DB, new OrderField[] { DB_TABLE.DB.USER }, false);
        public static Index ENGINE_COST_PRIMARY = Internal.createIndex("PRIMARY", ENGINE_COST_TABLE.ENGINE_COST, new OrderField[] { ENGINE_COST_TABLE.ENGINE_COST.COST_NAME, ENGINE_COST_TABLE.ENGINE_COST.ENGINE_NAME, ENGINE_COST_TABLE.ENGINE_COST.DEVICE_TYPE }, true);
        public static Index EVENT_PRIMARY = Internal.createIndex("PRIMARY", EVENT_TABLE.EVENT, new OrderField[] { EVENT_TABLE.EVENT.DB, EVENT_TABLE.EVENT.NAME }, true);
        public static Index FUNC_PRIMARY = Internal.createIndex("PRIMARY", FUNC_TABLE.FUNC, new OrderField[] { FUNC_TABLE.FUNC.NAME }, true);
        public static Index GTID_EXECUTED_PRIMARY = Internal.createIndex("PRIMARY", GTID_EXECUTED_TABLE.GTID_EXECUTED, new OrderField[] { GTID_EXECUTED_TABLE.GTID_EXECUTED.SOURCE_UUID, GTID_EXECUTED_TABLE.GTID_EXECUTED.INTERVAL_START }, true);
        public static Index HELP_CATEGORY_NAME = Internal.createIndex("name", HELP_CATEGORY_TABLE.HELP_CATEGORY, new OrderField[] { HELP_CATEGORY_TABLE.HELP_CATEGORY.NAME }, true);
        public static Index HELP_CATEGORY_PRIMARY = Internal.createIndex("PRIMARY", HELP_CATEGORY_TABLE.HELP_CATEGORY, new OrderField[] { HELP_CATEGORY_TABLE.HELP_CATEGORY.HELP_CATEGORY_ID }, true);
        public static Index HELP_KEYWORD_NAME = Internal.createIndex("name", HELP_KEYWORD_TABLE.HELP_KEYWORD, new OrderField[] { HELP_KEYWORD_TABLE.HELP_KEYWORD.NAME }, true);
        public static Index HELP_KEYWORD_PRIMARY = Internal.createIndex("PRIMARY", HELP_KEYWORD_TABLE.HELP_KEYWORD, new OrderField[] { HELP_KEYWORD_TABLE.HELP_KEYWORD.HELP_KEYWORD_ID }, true);
        public static Index HELP_RELATION_PRIMARY = Internal.createIndex("PRIMARY", HELP_RELATION_TABLE.HELP_RELATION, new OrderField[] { HELP_RELATION_TABLE.HELP_RELATION.HELP_KEYWORD_ID, HELP_RELATION_TABLE.HELP_RELATION.HELP_TOPIC_ID }, true);
        public static Index HELP_TOPIC_NAME = Internal.createIndex("name", HELP_TOPIC_TABLE.HELP_TOPIC, new OrderField[] { HELP_TOPIC_TABLE.HELP_TOPIC.NAME }, true);
        public static Index HELP_TOPIC_PRIMARY = Internal.createIndex("PRIMARY", HELP_TOPIC_TABLE.HELP_TOPIC, new OrderField[] { HELP_TOPIC_TABLE.HELP_TOPIC.HELP_TOPIC_ID }, true);
        public static Index INNODB_INDEX_STATS_PRIMARY = Internal.createIndex("PRIMARY", INNODB_INDEX_STATS_TABLE.INNODB_INDEX_STATS, new OrderField[] { INNODB_INDEX_STATS_TABLE.INNODB_INDEX_STATS.DATABASE_NAME, INNODB_INDEX_STATS_TABLE.INNODB_INDEX_STATS.TABLE_NAME, INNODB_INDEX_STATS_TABLE.INNODB_INDEX_STATS.INDEX_NAME, INNODB_INDEX_STATS_TABLE.INNODB_INDEX_STATS.STAT_NAME }, true);
        public static Index INNODB_TABLE_STATS_PRIMARY = Internal.createIndex("PRIMARY", INNODB_TABLE_STATS_TABLE.INNODB_TABLE_STATS, new OrderField[] { INNODB_TABLE_STATS_TABLE.INNODB_TABLE_STATS.DATABASE_NAME, INNODB_TABLE_STATS_TABLE.INNODB_TABLE_STATS.TABLE_NAME }, true);
        public static Index NDB_BINLOG_INDEX_PRIMARY = Internal.createIndex("PRIMARY", NDB_BINLOG_INDEX_TABLE.NDB_BINLOG_INDEX, new OrderField[] { NDB_BINLOG_INDEX_TABLE.NDB_BINLOG_INDEX.EPOCH, NDB_BINLOG_INDEX_TABLE.NDB_BINLOG_INDEX.ORIG_SERVER_ID, NDB_BINLOG_INDEX_TABLE.NDB_BINLOG_INDEX.ORIG_EPOCH }, true);
        public static Index PLUGIN_PRIMARY = Internal.createIndex("PRIMARY", PLUGIN_TABLE.PLUGIN, new OrderField[] { PLUGIN_TABLE.PLUGIN.NAME }, true);
        public static Index PROC_PRIMARY = Internal.createIndex("PRIMARY", PROC_TABLE.PROC, new OrderField[] { PROC_TABLE.PROC.DB, PROC_TABLE.PROC.NAME, PROC_TABLE.PROC.TYPE }, true);
        public static Index PROCS_PRIV_GRANTOR = Internal.createIndex("Grantor", PROCS_PRIV_TABLE.PROCS_PRIV, new OrderField[] { PROCS_PRIV_TABLE.PROCS_PRIV.GRANTOR }, false);
        public static Index PROCS_PRIV_PRIMARY = Internal.createIndex("PRIMARY", PROCS_PRIV_TABLE.PROCS_PRIV, new OrderField[] { PROCS_PRIV_TABLE.PROCS_PRIV.HOST, PROCS_PRIV_TABLE.PROCS_PRIV.DB, PROCS_PRIV_TABLE.PROCS_PRIV.USER, PROCS_PRIV_TABLE.PROCS_PRIV.ROUTINE_NAME, PROCS_PRIV_TABLE.PROCS_PRIV.ROUTINE_TYPE }, true);
        public static Index PROXIES_PRIV_GRANTOR = Internal.createIndex("Grantor", PROXIES_PRIV_TABLE.PROXIES_PRIV, new OrderField[] { PROXIES_PRIV_TABLE.PROXIES_PRIV.GRANTOR }, false);
        public static Index PROXIES_PRIV_PRIMARY = Internal.createIndex("PRIMARY", PROXIES_PRIV_TABLE.PROXIES_PRIV, new OrderField[] { PROXIES_PRIV_TABLE.PROXIES_PRIV.HOST, PROXIES_PRIV_TABLE.PROXIES_PRIV.USER, PROXIES_PRIV_TABLE.PROXIES_PRIV.PROXIED_HOST, PROXIES_PRIV_TABLE.PROXIES_PRIV.PROXIED_USER }, true);
        public static Index SERVERS_PRIMARY = Internal.createIndex("PRIMARY", SERVERS_TABLE.SERVERS, new OrderField[] { SERVERS_TABLE.SERVERS.SERVER_NAME }, true);
        public static Index SERVER_COST_PRIMARY = Internal.createIndex("PRIMARY", SERVER_COST_TABLE.SERVER_COST, new OrderField[] { SERVER_COST_TABLE.SERVER_COST.COST_NAME }, true);
        public static Index SLAVE_MASTER_INFO_PRIMARY = Internal.createIndex("PRIMARY", SLAVE_MASTER_INFO_TABLE.SLAVE_MASTER_INFO, new OrderField[] { SLAVE_MASTER_INFO_TABLE.SLAVE_MASTER_INFO.CHANNEL_NAME }, true);
        public static Index SLAVE_RELAY_LOG_INFO_PRIMARY = Internal.createIndex("PRIMARY", SLAVE_RELAY_LOG_INFO_TABLE.SLAVE_RELAY_LOG_INFO, new OrderField[] { SLAVE_RELAY_LOG_INFO_TABLE.SLAVE_RELAY_LOG_INFO.CHANNEL_NAME }, true);
        public static Index SLAVE_WORKER_INFO_PRIMARY = Internal.createIndex("PRIMARY", SLAVE_WORKER_INFO_TABLE.SLAVE_WORKER_INFO, new OrderField[] { SLAVE_WORKER_INFO_TABLE.SLAVE_WORKER_INFO.CHANNEL_NAME, SLAVE_WORKER_INFO_TABLE.SLAVE_WORKER_INFO.ID }, true);
        public static Index TABLES_PRIV_GRANTOR = Internal.createIndex("Grantor", TABLES_PRIV_TABLE.TABLES_PRIV, new OrderField[] { TABLES_PRIV_TABLE.TABLES_PRIV.GRANTOR }, false);
        public static Index TABLES_PRIV_PRIMARY = Internal.createIndex("PRIMARY", TABLES_PRIV_TABLE.TABLES_PRIV, new OrderField[] { TABLES_PRIV_TABLE.TABLES_PRIV.HOST, TABLES_PRIV_TABLE.TABLES_PRIV.DB, TABLES_PRIV_TABLE.TABLES_PRIV.USER, TABLES_PRIV_TABLE.TABLES_PRIV.TABLE_NAME }, true);
        public static Index TIME_ZONE_PRIMARY = Internal.createIndex("PRIMARY", TIME_ZONE_TABLE.TIME_ZONE, new OrderField[] { TIME_ZONE_TABLE.TIME_ZONE.TIME_ZONE_ID }, true);
        public static Index TIME_ZONE_LEAP_SECOND_PRIMARY = Internal.createIndex("PRIMARY", TIME_ZONE_LEAP_SECOND_TABLE.TIME_ZONE_LEAP_SECOND, new OrderField[] { TIME_ZONE_LEAP_SECOND_TABLE.TIME_ZONE_LEAP_SECOND.TRANSITION_TIME }, true);
        public static Index TIME_ZONE_NAME_PRIMARY = Internal.createIndex("PRIMARY", TIME_ZONE_NAME_TABLE.TIME_ZONE_NAME, new OrderField[] { TIME_ZONE_NAME_TABLE.TIME_ZONE_NAME.NAME }, true);
        public static Index TIME_ZONE_TRANSITION_PRIMARY = Internal.createIndex("PRIMARY", TIME_ZONE_TRANSITION_TABLE.TIME_ZONE_TRANSITION, new OrderField[] { TIME_ZONE_TRANSITION_TABLE.TIME_ZONE_TRANSITION.TIME_ZONE_ID, TIME_ZONE_TRANSITION_TABLE.TIME_ZONE_TRANSITION.TRANSITION_TIME }, true);
        public static Index TIME_ZONE_TRANSITION_TYPE_PRIMARY = Internal.createIndex("PRIMARY", TIME_ZONE_TRANSITION_TYPE_TABLE.TIME_ZONE_TRANSITION_TYPE, new OrderField[] { TIME_ZONE_TRANSITION_TYPE_TABLE.TIME_ZONE_TRANSITION_TYPE.TIME_ZONE_ID, TIME_ZONE_TRANSITION_TYPE_TABLE.TIME_ZONE_TRANSITION_TYPE.TRANSITION_TYPE_ID }, true);
        public static Index USER_PRIMARY = Internal.createIndex("PRIMARY", USER_TABLE.USER, new OrderField[] { USER_TABLE.USER.HOST, USER_TABLE.USER.USER_ }, true);
    }
}
