/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.mysql.tables;


import com.example.demo.infrastructure.jooq.generated.mysql.Indexes;
import com.example.demo.infrastructure.jooq.generated.mysql.Keys;
import com.example.demo.infrastructure.jooq.generated.mysql.Mysql;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.records.HelpTopicRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * help topics
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HELP_TOPIC_TABLE extends TableImpl<HelpTopicRecord> {

    private static final long serialVersionUID = 592056148;

    /**
     * The reference instance of <code>mysql.help_topic</code>
     */
    public static final HELP_TOPIC_TABLE HELP_TOPIC = new HELP_TOPIC_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HelpTopicRecord> getRecordType() {
        return HelpTopicRecord.class;
    }

    /**
     * The column <code>mysql.help_topic.help_topic_id</code>.
     */
    public final TableField<HelpTopicRecord, UInteger> HELP_TOPIC_ID = createField(DSL.name("help_topic_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mysql.help_topic.name</code>.
     */
    public final TableField<HelpTopicRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.help_topic.help_category_id</code>.
     */
    public final TableField<HelpTopicRecord, UShort> HELP_CATEGORY_ID = createField(DSL.name("help_category_id"), org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mysql.help_topic.description</code>.
     */
    public final TableField<HelpTopicRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>mysql.help_topic.example</code>.
     */
    public final TableField<HelpTopicRecord, String> EXAMPLE = createField(DSL.name("example"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>mysql.help_topic.url</code>.
     */
    public final TableField<HelpTopicRecord, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>mysql.help_topic</code> table reference
     */
    public HELP_TOPIC_TABLE() {
        this(DSL.name("help_topic"), null);
    }

    /**
     * Create an aliased <code>mysql.help_topic</code> table reference
     */
    public HELP_TOPIC_TABLE(String alias) {
        this(DSL.name(alias), HELP_TOPIC);
    }

    /**
     * Create an aliased <code>mysql.help_topic</code> table reference
     */
    public HELP_TOPIC_TABLE(Name alias) {
        this(alias, HELP_TOPIC);
    }

    private HELP_TOPIC_TABLE(Name alias, Table<HelpTopicRecord> aliased) {
        this(alias, aliased, null);
    }

    private HELP_TOPIC_TABLE(Name alias, Table<HelpTopicRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("help topics"));
    }

    public <O extends Record> HELP_TOPIC_TABLE(Table<O> child, ForeignKey<O, HelpTopicRecord> key) {
        super(child, key, HELP_TOPIC);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HELP_TOPIC_NAME, Indexes.HELP_TOPIC_PRIMARY);
    }

    @Override
    public UniqueKey<HelpTopicRecord> getPrimaryKey() {
        return Keys.KEY_HELP_TOPIC_PRIMARY;
    }

    @Override
    public List<UniqueKey<HelpTopicRecord>> getKeys() {
        return Arrays.<UniqueKey<HelpTopicRecord>>asList(Keys.KEY_HELP_TOPIC_PRIMARY, Keys.KEY_HELP_TOPIC_NAME);
    }

    @Override
    public HELP_TOPIC_TABLE as(String alias) {
        return new HELP_TOPIC_TABLE(DSL.name(alias), this);
    }

    @Override
    public HELP_TOPIC_TABLE as(Name alias) {
        return new HELP_TOPIC_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HELP_TOPIC_TABLE rename(String name) {
        return new HELP_TOPIC_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HELP_TOPIC_TABLE rename(Name name) {
        return new HELP_TOPIC_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, String, UShort, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
