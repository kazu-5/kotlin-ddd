/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.IoGlobalByFileByLatencyRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE extends TableImpl<IoGlobalByFileByLatencyRecord> {

    private static final long serialVersionUID = -399873882;

    /**
     * The reference instance of <code>sys.io_global_by_file_by_latency</code>
     */
    public static final IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE IO_GLOBAL_BY_FILE_BY_LATENCY = new IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IoGlobalByFileByLatencyRecord> getRecordType() {
        return IoGlobalByFileByLatencyRecord.class;
    }

    /**
     * The column <code>sys.io_global_by_file_by_latency.file</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, String> FILE = createField(DSL.name("file"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.total</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, ULong> TOTAL = createField(DSL.name("total"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.total_latency</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, String> TOTAL_LATENCY = createField(DSL.name("total_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.count_read</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, ULong> COUNT_READ = createField(DSL.name("count_read"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.read_latency</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, String> READ_LATENCY = createField(DSL.name("read_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.count_write</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, ULong> COUNT_WRITE = createField(DSL.name("count_write"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.write_latency</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, String> WRITE_LATENCY = createField(DSL.name("write_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.count_misc</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, ULong> COUNT_MISC = createField(DSL.name("count_misc"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.io_global_by_file_by_latency.misc_latency</code>.
     */
    public final TableField<IoGlobalByFileByLatencyRecord, String> MISC_LATENCY = createField(DSL.name("misc_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sys.io_global_by_file_by_latency</code> table reference
     */
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE() {
        this(DSL.name("io_global_by_file_by_latency"), null);
    }

    /**
     * Create an aliased <code>sys.io_global_by_file_by_latency</code> table reference
     */
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(String alias) {
        this(DSL.name(alias), IO_GLOBAL_BY_FILE_BY_LATENCY);
    }

    /**
     * Create an aliased <code>sys.io_global_by_file_by_latency</code> table reference
     */
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(Name alias) {
        this(alias, IO_GLOBAL_BY_FILE_BY_LATENCY);
    }

    private IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(Name alias, Table<IoGlobalByFileByLatencyRecord> aliased) {
        this(alias, aliased, null);
    }

    private IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(Name alias, Table<IoGlobalByFileByLatencyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(Table<O> child, ForeignKey<O, IoGlobalByFileByLatencyRecord> key) {
        super(child, key, IO_GLOBAL_BY_FILE_BY_LATENCY);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE as(String alias) {
        return new IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(DSL.name(alias), this);
    }

    @Override
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE as(Name alias) {
        return new IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE rename(String name) {
        return new IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE rename(Name name) {
        return new IO_GLOBAL_BY_FILE_BY_LATENCY_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, ULong, String, ULong, String, ULong, String, ULong, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
