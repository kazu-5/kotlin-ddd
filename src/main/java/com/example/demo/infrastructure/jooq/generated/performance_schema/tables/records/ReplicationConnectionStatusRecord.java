/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.performance_schema.tables.records;


import com.example.demo.infrastructure.jooq.generated.performance_schema.enums.ReplicationConnectionStatusServiceState;
import com.example.demo.infrastructure.jooq.generated.performance_schema.tables.REPLICATION_CONNECTION_STATUS_TABLE;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationConnectionStatusRecord extends TableRecordImpl<ReplicationConnectionStatusRecord> implements Record11<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp> {

    private static final long serialVersionUID = -428788073;

    /**
     * Setter for <code>performance_schema.replication_connection_status.CHANNEL_NAME</code>.
     */
    public void setChannelName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.CHANNEL_NAME</code>.
     */
    public String getChannelName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.GROUP_NAME</code>.
     */
    public void setGroupName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.GROUP_NAME</code>.
     */
    public String getGroupName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.SOURCE_UUID</code>.
     */
    public void setSourceUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.SOURCE_UUID</code>.
     */
    public String getSourceUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.THREAD_ID</code>.
     */
    public void setThreadId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.THREAD_ID</code>.
     */
    public ULong getThreadId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.SERVICE_STATE</code>.
     */
    public void setServiceState(ReplicationConnectionStatusServiceState value) {
        set(4, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.SERVICE_STATE</code>.
     */
    public ReplicationConnectionStatusServiceState getServiceState() {
        return (ReplicationConnectionStatusServiceState) get(4);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.COUNT_RECEIVED_HEARTBEATS</code>.
     */
    public void setCountReceivedHeartbeats(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.COUNT_RECEIVED_HEARTBEATS</code>.
     */
    public ULong getCountReceivedHeartbeats() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_HEARTBEAT_TIMESTAMP</code>. Shows when the most recent heartbeat signal was received.
     */
    public void setLastHeartbeatTimestamp(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_HEARTBEAT_TIMESTAMP</code>. Shows when the most recent heartbeat signal was received.
     */
    public Timestamp getLastHeartbeatTimestamp() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.RECEIVED_TRANSACTION_SET</code>.
     */
    public void setReceivedTransactionSet(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.RECEIVED_TRANSACTION_SET</code>.
     */
    public String getReceivedTransactionSet() {
        return (String) get(7);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_NUMBER</code>.
     */
    public void setLastErrorNumber(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_NUMBER</code>.
     */
    public Integer getLastErrorNumber() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_MESSAGE</code>.
     */
    public void setLastErrorMessage(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_MESSAGE</code>.
     */
    public String getLastErrorMessage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_TIMESTAMP</code>.
     */
    public void setLastErrorTimestamp(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_TIMESTAMP</code>.
     */
    public Timestamp getLastErrorTimestamp() {
        return (Timestamp) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.CHANNEL_NAME;
    }

    @Override
    public Field<String> field2() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.GROUP_NAME;
    }

    @Override
    public Field<String> field3() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.SOURCE_UUID;
    }

    @Override
    public Field<ULong> field4() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.THREAD_ID;
    }

    @Override
    public Field<ReplicationConnectionStatusServiceState> field5() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.SERVICE_STATE;
    }

    @Override
    public Field<ULong> field6() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.COUNT_RECEIVED_HEARTBEATS;
    }

    @Override
    public Field<Timestamp> field7() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.LAST_HEARTBEAT_TIMESTAMP;
    }

    @Override
    public Field<String> field8() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.RECEIVED_TRANSACTION_SET;
    }

    @Override
    public Field<Integer> field9() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.LAST_ERROR_NUMBER;
    }

    @Override
    public Field<String> field10() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.LAST_ERROR_MESSAGE;
    }

    @Override
    public Field<Timestamp> field11() {
        return REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS.LAST_ERROR_TIMESTAMP;
    }

    @Override
    public String component1() {
        return getChannelName();
    }

    @Override
    public String component2() {
        return getGroupName();
    }

    @Override
    public String component3() {
        return getSourceUuid();
    }

    @Override
    public ULong component4() {
        return getThreadId();
    }

    @Override
    public ReplicationConnectionStatusServiceState component5() {
        return getServiceState();
    }

    @Override
    public ULong component6() {
        return getCountReceivedHeartbeats();
    }

    @Override
    public Timestamp component7() {
        return getLastHeartbeatTimestamp();
    }

    @Override
    public String component8() {
        return getReceivedTransactionSet();
    }

    @Override
    public Integer component9() {
        return getLastErrorNumber();
    }

    @Override
    public String component10() {
        return getLastErrorMessage();
    }

    @Override
    public Timestamp component11() {
        return getLastErrorTimestamp();
    }

    @Override
    public String value1() {
        return getChannelName();
    }

    @Override
    public String value2() {
        return getGroupName();
    }

    @Override
    public String value3() {
        return getSourceUuid();
    }

    @Override
    public ULong value4() {
        return getThreadId();
    }

    @Override
    public ReplicationConnectionStatusServiceState value5() {
        return getServiceState();
    }

    @Override
    public ULong value6() {
        return getCountReceivedHeartbeats();
    }

    @Override
    public Timestamp value7() {
        return getLastHeartbeatTimestamp();
    }

    @Override
    public String value8() {
        return getReceivedTransactionSet();
    }

    @Override
    public Integer value9() {
        return getLastErrorNumber();
    }

    @Override
    public String value10() {
        return getLastErrorMessage();
    }

    @Override
    public Timestamp value11() {
        return getLastErrorTimestamp();
    }

    @Override
    public ReplicationConnectionStatusRecord value1(String value) {
        setChannelName(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value2(String value) {
        setGroupName(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value3(String value) {
        setSourceUuid(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value4(ULong value) {
        setThreadId(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value5(ReplicationConnectionStatusServiceState value) {
        setServiceState(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value6(ULong value) {
        setCountReceivedHeartbeats(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value7(Timestamp value) {
        setLastHeartbeatTimestamp(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value8(String value) {
        setReceivedTransactionSet(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value9(Integer value) {
        setLastErrorNumber(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value10(String value) {
        setLastErrorMessage(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord value11(Timestamp value) {
        setLastErrorTimestamp(value);
        return this;
    }

    @Override
    public ReplicationConnectionStatusRecord values(String value1, String value2, String value3, ULong value4, ReplicationConnectionStatusServiceState value5, ULong value6, Timestamp value7, String value8, Integer value9, String value10, Timestamp value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationConnectionStatusRecord
     */
    public ReplicationConnectionStatusRecord() {
        super(REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS);
    }

    /**
     * Create a detached, initialised ReplicationConnectionStatusRecord
     */
    public ReplicationConnectionStatusRecord(String channelName, String groupName, String sourceUuid, ULong threadId, ReplicationConnectionStatusServiceState serviceState, ULong countReceivedHeartbeats, Timestamp lastHeartbeatTimestamp, String receivedTransactionSet, Integer lastErrorNumber, String lastErrorMessage, Timestamp lastErrorTimestamp) {
        super(REPLICATION_CONNECTION_STATUS_TABLE.REPLICATION_CONNECTION_STATUS);

        set(0, channelName);
        set(1, groupName);
        set(2, sourceUuid);
        set(3, threadId);
        set(4, serviceState);
        set(5, countReceivedHeartbeats);
        set(6, lastHeartbeatTimestamp);
        set(7, receivedTransactionSet);
        set(8, lastErrorNumber);
        set(9, lastErrorMessage);
        set(10, lastErrorTimestamp);
    }
}
