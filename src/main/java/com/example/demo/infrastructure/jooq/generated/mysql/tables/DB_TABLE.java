/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.mysql.tables;


import com.example.demo.infrastructure.jooq.generated.mysql.Indexes;
import com.example.demo.infrastructure.jooq.generated.mysql.Keys;
import com.example.demo.infrastructure.jooq.generated.mysql.Mysql;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbAlterPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbAlterRoutinePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreatePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateRoutinePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateTmpTablePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateViewPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbDeletePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbDropPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbEventPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbExecutePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbGrantPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbIndexPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbInsertPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbLockTablesPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbReferencesPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbSelectPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbShowViewPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbTriggerPriv;
import com.example.demo.infrastructure.jooq.generated.mysql.enums.DbUpdatePriv;
import com.example.demo.infrastructure.jooq.generated.mysql.tables.records.DbRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Database privileges
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DB_TABLE extends TableImpl<DbRecord> {

    private static final long serialVersionUID = 2013948115;

    /**
     * The reference instance of <code>mysql.db</code>
     */
    public static final DB_TABLE DB = new DB_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbRecord> getRecordType() {
        return DbRecord.class;
    }

    /**
     * The column <code>mysql.db.Host</code>.
     */
    public final TableField<DbRecord, String> HOST = createField(DSL.name("Host"), org.jooq.impl.SQLDataType.CHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.db.Db</code>.
     */
    public final TableField<DbRecord, String> DB_ = createField(DSL.name("Db"), org.jooq.impl.SQLDataType.CHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.db.User</code>.
     */
    public final TableField<DbRecord, String> USER = createField(DSL.name("User"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.db.Select_priv</code>.
     */
    public final TableField<DbRecord, DbSelectPriv> SELECT_PRIV = createField(DSL.name("Select_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbSelectPriv.class), this, "");

    /**
     * The column <code>mysql.db.Insert_priv</code>.
     */
    public final TableField<DbRecord, DbInsertPriv> INSERT_PRIV = createField(DSL.name("Insert_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbInsertPriv.class), this, "");

    /**
     * The column <code>mysql.db.Update_priv</code>.
     */
    public final TableField<DbRecord, DbUpdatePriv> UPDATE_PRIV = createField(DSL.name("Update_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbUpdatePriv.class), this, "");

    /**
     * The column <code>mysql.db.Delete_priv</code>.
     */
    public final TableField<DbRecord, DbDeletePriv> DELETE_PRIV = createField(DSL.name("Delete_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbDeletePriv.class), this, "");

    /**
     * The column <code>mysql.db.Create_priv</code>.
     */
    public final TableField<DbRecord, DbCreatePriv> CREATE_PRIV = createField(DSL.name("Create_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreatePriv.class), this, "");

    /**
     * The column <code>mysql.db.Drop_priv</code>.
     */
    public final TableField<DbRecord, DbDropPriv> DROP_PRIV = createField(DSL.name("Drop_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbDropPriv.class), this, "");

    /**
     * The column <code>mysql.db.Grant_priv</code>.
     */
    public final TableField<DbRecord, DbGrantPriv> GRANT_PRIV = createField(DSL.name("Grant_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbGrantPriv.class), this, "");

    /**
     * The column <code>mysql.db.References_priv</code>.
     */
    public final TableField<DbRecord, DbReferencesPriv> REFERENCES_PRIV = createField(DSL.name("References_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbReferencesPriv.class), this, "");

    /**
     * The column <code>mysql.db.Index_priv</code>.
     */
    public final TableField<DbRecord, DbIndexPriv> INDEX_PRIV = createField(DSL.name("Index_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbIndexPriv.class), this, "");

    /**
     * The column <code>mysql.db.Alter_priv</code>.
     */
    public final TableField<DbRecord, DbAlterPriv> ALTER_PRIV = createField(DSL.name("Alter_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbAlterPriv.class), this, "");

    /**
     * The column <code>mysql.db.Create_tmp_table_priv</code>.
     */
    public final TableField<DbRecord, DbCreateTmpTablePriv> CREATE_TMP_TABLE_PRIV = createField(DSL.name("Create_tmp_table_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateTmpTablePriv.class), this, "");

    /**
     * The column <code>mysql.db.Lock_tables_priv</code>.
     */
    public final TableField<DbRecord, DbLockTablesPriv> LOCK_TABLES_PRIV = createField(DSL.name("Lock_tables_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbLockTablesPriv.class), this, "");

    /**
     * The column <code>mysql.db.Create_view_priv</code>.
     */
    public final TableField<DbRecord, DbCreateViewPriv> CREATE_VIEW_PRIV = createField(DSL.name("Create_view_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateViewPriv.class), this, "");

    /**
     * The column <code>mysql.db.Show_view_priv</code>.
     */
    public final TableField<DbRecord, DbShowViewPriv> SHOW_VIEW_PRIV = createField(DSL.name("Show_view_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbShowViewPriv.class), this, "");

    /**
     * The column <code>mysql.db.Create_routine_priv</code>.
     */
    public final TableField<DbRecord, DbCreateRoutinePriv> CREATE_ROUTINE_PRIV = createField(DSL.name("Create_routine_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbCreateRoutinePriv.class), this, "");

    /**
     * The column <code>mysql.db.Alter_routine_priv</code>.
     */
    public final TableField<DbRecord, DbAlterRoutinePriv> ALTER_ROUTINE_PRIV = createField(DSL.name("Alter_routine_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbAlterRoutinePriv.class), this, "");

    /**
     * The column <code>mysql.db.Execute_priv</code>.
     */
    public final TableField<DbRecord, DbExecutePriv> EXECUTE_PRIV = createField(DSL.name("Execute_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbExecutePriv.class), this, "");

    /**
     * The column <code>mysql.db.Event_priv</code>.
     */
    public final TableField<DbRecord, DbEventPriv> EVENT_PRIV = createField(DSL.name("Event_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbEventPriv.class), this, "");

    /**
     * The column <code>mysql.db.Trigger_priv</code>.
     */
    public final TableField<DbRecord, DbTriggerPriv> TRIGGER_PRIV = createField(DSL.name("Trigger_priv"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.example.demo.infrastructure.jooq.generated.mysql.enums.DbTriggerPriv.class), this, "");

    /**
     * Create a <code>mysql.db</code> table reference
     */
    public DB_TABLE() {
        this(DSL.name("db"), null);
    }

    /**
     * Create an aliased <code>mysql.db</code> table reference
     */
    public DB_TABLE(String alias) {
        this(DSL.name(alias), DB);
    }

    /**
     * Create an aliased <code>mysql.db</code> table reference
     */
    public DB_TABLE(Name alias) {
        this(alias, DB);
    }

    private DB_TABLE(Name alias, Table<DbRecord> aliased) {
        this(alias, aliased, null);
    }

    private DB_TABLE(Name alias, Table<DbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Database privileges"));
    }

    public <O extends Record> DB_TABLE(Table<O> child, ForeignKey<O, DbRecord> key) {
        super(child, key, DB);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DB_PRIMARY, Indexes.DB_USER);
    }

    @Override
    public UniqueKey<DbRecord> getPrimaryKey() {
        return Keys.KEY_DB_PRIMARY;
    }

    @Override
    public List<UniqueKey<DbRecord>> getKeys() {
        return Arrays.<UniqueKey<DbRecord>>asList(Keys.KEY_DB_PRIMARY);
    }

    @Override
    public DB_TABLE as(String alias) {
        return new DB_TABLE(DSL.name(alias), this);
    }

    @Override
    public DB_TABLE as(Name alias) {
        return new DB_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DB_TABLE rename(String name) {
        return new DB_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DB_TABLE rename(Name name) {
        return new DB_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<String, String, String, DbSelectPriv, DbInsertPriv, DbUpdatePriv, DbDeletePriv, DbCreatePriv, DbDropPriv, DbGrantPriv, DbReferencesPriv, DbIndexPriv, DbAlterPriv, DbCreateTmpTablePriv, DbLockTablesPriv, DbCreateViewPriv, DbShowViewPriv, DbCreateRoutinePriv, DbAlterRoutinePriv, DbExecutePriv, DbEventPriv, DbTriggerPriv> fieldsRow() {
        return (Row22) super.fieldsRow();
    }
}
