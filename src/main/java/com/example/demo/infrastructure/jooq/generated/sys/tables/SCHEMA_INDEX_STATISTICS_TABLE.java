/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.SchemaIndexStatisticsRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SCHEMA_INDEX_STATISTICS_TABLE extends TableImpl<SchemaIndexStatisticsRecord> {

    private static final long serialVersionUID = -1865439172;

    /**
     * The reference instance of <code>sys.schema_index_statistics</code>
     */
    public static final SCHEMA_INDEX_STATISTICS_TABLE SCHEMA_INDEX_STATISTICS = new SCHEMA_INDEX_STATISTICS_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemaIndexStatisticsRecord> getRecordType() {
        return SchemaIndexStatisticsRecord.class;
    }

    /**
     * The column <code>sys.schema_index_statistics.table_schema</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> TABLE_SCHEMA = createField(DSL.name("table_schema"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.schema_index_statistics.table_name</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> TABLE_NAME = createField(DSL.name("table_name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.schema_index_statistics.index_name</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> INDEX_NAME = createField(DSL.name("index_name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.schema_index_statistics.rows_selected</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, ULong> ROWS_SELECTED = createField(DSL.name("rows_selected"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.schema_index_statistics.select_latency</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> SELECT_LATENCY = createField(DSL.name("select_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.schema_index_statistics.rows_inserted</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, ULong> ROWS_INSERTED = createField(DSL.name("rows_inserted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.schema_index_statistics.insert_latency</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> INSERT_LATENCY = createField(DSL.name("insert_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.schema_index_statistics.rows_updated</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, ULong> ROWS_UPDATED = createField(DSL.name("rows_updated"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.schema_index_statistics.update_latency</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> UPDATE_LATENCY = createField(DSL.name("update_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.schema_index_statistics.rows_deleted</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, ULong> ROWS_DELETED = createField(DSL.name("rows_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.schema_index_statistics.delete_latency</code>.
     */
    public final TableField<SchemaIndexStatisticsRecord, String> DELETE_LATENCY = createField(DSL.name("delete_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sys.schema_index_statistics</code> table reference
     */
    public SCHEMA_INDEX_STATISTICS_TABLE() {
        this(DSL.name("schema_index_statistics"), null);
    }

    /**
     * Create an aliased <code>sys.schema_index_statistics</code> table reference
     */
    public SCHEMA_INDEX_STATISTICS_TABLE(String alias) {
        this(DSL.name(alias), SCHEMA_INDEX_STATISTICS);
    }

    /**
     * Create an aliased <code>sys.schema_index_statistics</code> table reference
     */
    public SCHEMA_INDEX_STATISTICS_TABLE(Name alias) {
        this(alias, SCHEMA_INDEX_STATISTICS);
    }

    private SCHEMA_INDEX_STATISTICS_TABLE(Name alias, Table<SchemaIndexStatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SCHEMA_INDEX_STATISTICS_TABLE(Name alias, Table<SchemaIndexStatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> SCHEMA_INDEX_STATISTICS_TABLE(Table<O> child, ForeignKey<O, SchemaIndexStatisticsRecord> key) {
        super(child, key, SCHEMA_INDEX_STATISTICS);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public SCHEMA_INDEX_STATISTICS_TABLE as(String alias) {
        return new SCHEMA_INDEX_STATISTICS_TABLE(DSL.name(alias), this);
    }

    @Override
    public SCHEMA_INDEX_STATISTICS_TABLE as(Name alias) {
        return new SCHEMA_INDEX_STATISTICS_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SCHEMA_INDEX_STATISTICS_TABLE rename(String name) {
        return new SCHEMA_INDEX_STATISTICS_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SCHEMA_INDEX_STATISTICS_TABLE rename(Name name) {
        return new SCHEMA_INDEX_STATISTICS_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, ULong, String, ULong, String, ULong, String, ULong, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
