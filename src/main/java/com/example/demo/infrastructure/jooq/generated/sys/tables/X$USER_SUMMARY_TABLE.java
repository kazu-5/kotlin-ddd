/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.X$userSummaryRecord;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$USER_SUMMARY_TABLE extends TableImpl<X$userSummaryRecord> {

    private static final long serialVersionUID = -2079096957;

    /**
     * The reference instance of <code>sys.x$user_summary</code>
     */
    public static final X$USER_SUMMARY_TABLE X$USER_SUMMARY = new X$USER_SUMMARY_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$userSummaryRecord> getRecordType() {
        return X$userSummaryRecord.class;
    }

    /**
     * The column <code>sys.x$user_summary.user</code>.
     */
    public final TableField<X$userSummaryRecord, String> USER = createField(DSL.name("user"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>sys.x$user_summary.statements</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> STATEMENTS = createField(DSL.name("statements"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

    /**
     * The column <code>sys.x$user_summary.statement_latency</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> STATEMENT_LATENCY = createField(DSL.name("statement_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

    /**
     * The column <code>sys.x$user_summary.statement_avg_latency</code>.
     */
    public final TableField<X$userSummaryRecord, BigDecimal> STATEMENT_AVG_LATENCY = createField(DSL.name("statement_avg_latency"), org.jooq.impl.SQLDataType.DECIMAL(65, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>sys.x$user_summary.table_scans</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> TABLE_SCANS = createField(DSL.name("table_scans"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(65), this, "");

    /**
     * The column <code>sys.x$user_summary.file_ios</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> FILE_IOS = createField(DSL.name("file_ios"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

    /**
     * The column <code>sys.x$user_summary.file_io_latency</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> FILE_IO_LATENCY = createField(DSL.name("file_io_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

    /**
     * The column <code>sys.x$user_summary.current_connections</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> CURRENT_CONNECTIONS = createField(DSL.name("current_connections"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$user_summary.total_connections</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> TOTAL_CONNECTIONS = createField(DSL.name("total_connections"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$user_summary.unique_hosts</code>.
     */
    public final TableField<X$userSummaryRecord, Long> UNIQUE_HOSTS = createField(DSL.name("unique_hosts"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>sys.x$user_summary.current_memory</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> CURRENT_MEMORY = createField(DSL.name("current_memory"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(63), this, "");

    /**
     * The column <code>sys.x$user_summary.total_memory_allocated</code>.
     */
    public final TableField<X$userSummaryRecord, BigInteger> TOTAL_MEMORY_ALLOCATED = createField(DSL.name("total_memory_allocated"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

    /**
     * Create a <code>sys.x$user_summary</code> table reference
     */
    public X$USER_SUMMARY_TABLE() {
        this(DSL.name("x$user_summary"), null);
    }

    /**
     * Create an aliased <code>sys.x$user_summary</code> table reference
     */
    public X$USER_SUMMARY_TABLE(String alias) {
        this(DSL.name(alias), X$USER_SUMMARY);
    }

    /**
     * Create an aliased <code>sys.x$user_summary</code> table reference
     */
    public X$USER_SUMMARY_TABLE(Name alias) {
        this(alias, X$USER_SUMMARY);
    }

    private X$USER_SUMMARY_TABLE(Name alias, Table<X$userSummaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$USER_SUMMARY_TABLE(Name alias, Table<X$userSummaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> X$USER_SUMMARY_TABLE(Table<O> child, ForeignKey<O, X$userSummaryRecord> key) {
        super(child, key, X$USER_SUMMARY);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public X$USER_SUMMARY_TABLE as(String alias) {
        return new X$USER_SUMMARY_TABLE(DSL.name(alias), this);
    }

    @Override
    public X$USER_SUMMARY_TABLE as(Name alias) {
        return new X$USER_SUMMARY_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$USER_SUMMARY_TABLE rename(String name) {
        return new X$USER_SUMMARY_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$USER_SUMMARY_TABLE rename(Name name) {
        return new X$USER_SUMMARY_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, BigInteger, BigInteger, BigDecimal, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Long, BigInteger, BigInteger> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
