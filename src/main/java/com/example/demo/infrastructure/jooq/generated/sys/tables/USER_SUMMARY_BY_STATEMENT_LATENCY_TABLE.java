/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.UserSummaryByStatementLatencyRecord;

import java.math.BigInteger;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE extends TableImpl<UserSummaryByStatementLatencyRecord> {

    private static final long serialVersionUID = 826480741;

    /**
     * The reference instance of <code>sys.user_summary_by_statement_latency</code>
     */
    public static final USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE USER_SUMMARY_BY_STATEMENT_LATENCY = new USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSummaryByStatementLatencyRecord> getRecordType() {
        return UserSummaryByStatementLatencyRecord.class;
    }

    /**
     * The column <code>sys.user_summary_by_statement_latency.user</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, String> USER = createField(DSL.name("user"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.total</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, BigInteger> TOTAL = createField(DSL.name("total"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.total_latency</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, String> TOTAL_LATENCY = createField(DSL.name("total_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.max_latency</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, String> MAX_LATENCY = createField(DSL.name("max_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.lock_latency</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, String> LOCK_LATENCY = createField(DSL.name("lock_latency"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.rows_sent</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, BigInteger> ROWS_SENT = createField(DSL.name("rows_sent"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.rows_examined</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, BigInteger> ROWS_EXAMINED = createField(DSL.name("rows_examined"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.rows_affected</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, BigInteger> ROWS_AFFECTED = createField(DSL.name("rows_affected"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.user_summary_by_statement_latency.full_scans</code>.
     */
    public final TableField<UserSummaryByStatementLatencyRecord, BigInteger> FULL_SCANS = createField(DSL.name("full_scans"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(43), this, "");

    /**
     * Create a <code>sys.user_summary_by_statement_latency</code> table reference
     */
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE() {
        this(DSL.name("user_summary_by_statement_latency"), null);
    }

    /**
     * Create an aliased <code>sys.user_summary_by_statement_latency</code> table reference
     */
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(String alias) {
        this(DSL.name(alias), USER_SUMMARY_BY_STATEMENT_LATENCY);
    }

    /**
     * Create an aliased <code>sys.user_summary_by_statement_latency</code> table reference
     */
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(Name alias) {
        this(alias, USER_SUMMARY_BY_STATEMENT_LATENCY);
    }

    private USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(Name alias, Table<UserSummaryByStatementLatencyRecord> aliased) {
        this(alias, aliased, null);
    }

    private USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(Name alias, Table<UserSummaryByStatementLatencyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(Table<O> child, ForeignKey<O, UserSummaryByStatementLatencyRecord> key) {
        super(child, key, USER_SUMMARY_BY_STATEMENT_LATENCY);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE as(String alias) {
        return new USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(DSL.name(alias), this);
    }

    @Override
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE as(Name alias) {
        return new USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE rename(String name) {
        return new USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE rename(Name name) {
        return new USER_SUMMARY_BY_STATEMENT_LATENCY_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, BigInteger, String, String, String, BigInteger, BigInteger, BigInteger, BigInteger> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
