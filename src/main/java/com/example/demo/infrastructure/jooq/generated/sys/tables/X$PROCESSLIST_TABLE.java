/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.enums.X$processlistTrxAutocommit;
import com.example.demo.infrastructure.jooq.generated.sys.enums.X$processlistTrxState;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.X$processlistRecord;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$PROCESSLIST_TABLE extends TableImpl<X$processlistRecord> {

    private static final long serialVersionUID = -1580056454;

    /**
     * The reference instance of <code>sys.x$processlist</code>
     */
    public static final X$PROCESSLIST_TABLE X$PROCESSLIST = new X$PROCESSLIST_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$processlistRecord> getRecordType() {
        return X$processlistRecord.class;
    }

    /**
     * The column <code>sys.x$processlist.thd_id</code>.
     */
    public final TableField<X$processlistRecord, ULong> THD_ID = createField(DSL.name("thd_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$processlist.conn_id</code>.
     */
    public final TableField<X$processlistRecord, ULong> CONN_ID = createField(DSL.name("conn_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.user</code>.
     */
    public final TableField<X$processlistRecord, String> USER = createField(DSL.name("user"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>sys.x$processlist.db</code>.
     */
    public final TableField<X$processlistRecord, String> DB = createField(DSL.name("db"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$processlist.command</code>.
     */
    public final TableField<X$processlistRecord, String> COMMAND = createField(DSL.name("command"), org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

    /**
     * The column <code>sys.x$processlist.state</code>.
     */
    public final TableField<X$processlistRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$processlist.time</code>.
     */
    public final TableField<X$processlistRecord, Long> TIME = createField(DSL.name("time"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.x$processlist.current_statement</code>.
     */
    public final TableField<X$processlistRecord, String> CURRENT_STATEMENT = createField(DSL.name("current_statement"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.x$processlist.statement_latency</code>.
     */
    public final TableField<X$processlistRecord, ULong> STATEMENT_LATENCY = createField(DSL.name("statement_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.progress</code>.
     */
    public final TableField<X$processlistRecord, BigDecimal> PROGRESS = createField(DSL.name("progress"), org.jooq.impl.SQLDataType.DECIMAL(26, 2), this, "");

    /**
     * The column <code>sys.x$processlist.lock_latency</code>.
     */
    public final TableField<X$processlistRecord, ULong> LOCK_LATENCY = createField(DSL.name("lock_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.rows_examined</code>.
     */
    public final TableField<X$processlistRecord, ULong> ROWS_EXAMINED = createField(DSL.name("rows_examined"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.rows_sent</code>.
     */
    public final TableField<X$processlistRecord, ULong> ROWS_SENT = createField(DSL.name("rows_sent"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.rows_affected</code>.
     */
    public final TableField<X$processlistRecord, ULong> ROWS_AFFECTED = createField(DSL.name("rows_affected"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.tmp_tables</code>.
     */
    public final TableField<X$processlistRecord, ULong> TMP_TABLES = createField(DSL.name("tmp_tables"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.tmp_disk_tables</code>.
     */
    public final TableField<X$processlistRecord, ULong> TMP_DISK_TABLES = createField(DSL.name("tmp_disk_tables"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.full_scan</code>.
     */
    public final TableField<X$processlistRecord, String> FULL_SCAN = createField(DSL.name("full_scan"), org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sys.x$processlist.last_statement</code>.
     */
    public final TableField<X$processlistRecord, String> LAST_STATEMENT = createField(DSL.name("last_statement"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sys.x$processlist.last_statement_latency</code>.
     */
    public final TableField<X$processlistRecord, ULong> LAST_STATEMENT_LATENCY = createField(DSL.name("last_statement_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.current_memory</code>.
     */
    public final TableField<X$processlistRecord, BigInteger> CURRENT_MEMORY = createField(DSL.name("current_memory"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$processlist.last_wait</code>.
     */
    public final TableField<X$processlistRecord, String> LAST_WAIT = createField(DSL.name("last_wait"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>sys.x$processlist.last_wait_latency</code>.
     */
    public final TableField<X$processlistRecord, String> LAST_WAIT_LATENCY = createField(DSL.name("last_wait_latency"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>sys.x$processlist.source</code>.
     */
    public final TableField<X$processlistRecord, String> SOURCE = createField(DSL.name("source"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$processlist.trx_latency</code>.
     */
    public final TableField<X$processlistRecord, ULong> TRX_LATENCY = createField(DSL.name("trx_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>sys.x$processlist.trx_state</code>.
     */
    public final TableField<X$processlistRecord, X$processlistTrxState> TRX_STATE = createField(DSL.name("trx_state"), org.jooq.impl.SQLDataType.VARCHAR(11).asEnumDataType(com.example.demo.infrastructure.jooq.generated.sys.enums.X$processlistTrxState.class), this, "");

    /**
     * The column <code>sys.x$processlist.trx_autocommit</code>.
     */
    public final TableField<X$processlistRecord, X$processlistTrxAutocommit> TRX_AUTOCOMMIT = createField(DSL.name("trx_autocommit"), org.jooq.impl.SQLDataType.VARCHAR(3).asEnumDataType(com.example.demo.infrastructure.jooq.generated.sys.enums.X$processlistTrxAutocommit.class), this, "");

    /**
     * The column <code>sys.x$processlist.pid</code>.
     */
    public final TableField<X$processlistRecord, String> PID = createField(DSL.name("pid"), org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>sys.x$processlist.program_name</code>.
     */
    public final TableField<X$processlistRecord, String> PROGRAM_NAME = createField(DSL.name("program_name"), org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>sys.x$processlist</code> table reference
     */
    public X$PROCESSLIST_TABLE() {
        this(DSL.name("x$processlist"), null);
    }

    /**
     * Create an aliased <code>sys.x$processlist</code> table reference
     */
    public X$PROCESSLIST_TABLE(String alias) {
        this(DSL.name(alias), X$PROCESSLIST);
    }

    /**
     * Create an aliased <code>sys.x$processlist</code> table reference
     */
    public X$PROCESSLIST_TABLE(Name alias) {
        this(alias, X$PROCESSLIST);
    }

    private X$PROCESSLIST_TABLE(Name alias, Table<X$processlistRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$PROCESSLIST_TABLE(Name alias, Table<X$processlistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> X$PROCESSLIST_TABLE(Table<O> child, ForeignKey<O, X$processlistRecord> key) {
        super(child, key, X$PROCESSLIST);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public X$PROCESSLIST_TABLE as(String alias) {
        return new X$PROCESSLIST_TABLE(DSL.name(alias), this);
    }

    @Override
    public X$PROCESSLIST_TABLE as(Name alias) {
        return new X$PROCESSLIST_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$PROCESSLIST_TABLE rename(String name) {
        return new X$PROCESSLIST_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$PROCESSLIST_TABLE rename(Name name) {
        return new X$PROCESSLIST_TABLE(name, null);
    }
}
