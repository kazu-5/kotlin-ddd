/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.jooq.generated.sys.tables;


import com.example.demo.infrastructure.jooq.generated.sys.Sys;
import com.example.demo.infrastructure.jooq.generated.sys.tables.records.X$schemaTableStatisticsRecord;

import java.math.BigInteger;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$SCHEMA_TABLE_STATISTICS_TABLE extends TableImpl<X$schemaTableStatisticsRecord> {

    private static final long serialVersionUID = 1980393645;

    /**
     * The reference instance of <code>sys.x$schema_table_statistics</code>
     */
    public static final X$SCHEMA_TABLE_STATISTICS_TABLE X$SCHEMA_TABLE_STATISTICS = new X$SCHEMA_TABLE_STATISTICS_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$schemaTableStatisticsRecord> getRecordType() {
        return X$schemaTableStatisticsRecord.class;
    }

    /**
     * The column <code>sys.x$schema_table_statistics.table_schema</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, String> TABLE_SCHEMA = createField(DSL.name("table_schema"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.table_name</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, String> TABLE_NAME = createField(DSL.name("table_name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.total_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> TOTAL_LATENCY = createField(DSL.name("total_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.rows_fetched</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> ROWS_FETCHED = createField(DSL.name("rows_fetched"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.fetch_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> FETCH_LATENCY = createField(DSL.name("fetch_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.rows_inserted</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> ROWS_INSERTED = createField(DSL.name("rows_inserted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.insert_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> INSERT_LATENCY = createField(DSL.name("insert_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.rows_updated</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> ROWS_UPDATED = createField(DSL.name("rows_updated"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.update_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> UPDATE_LATENCY = createField(DSL.name("update_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.rows_deleted</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> ROWS_DELETED = createField(DSL.name("rows_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.delete_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, ULong> DELETE_LATENCY = createField(DSL.name("delete_latency"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_read_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_READ_REQUESTS = createField(DSL.name("io_read_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_read</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_READ = createField(DSL.name("io_read"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_read_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_READ_LATENCY = createField(DSL.name("io_read_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_write_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_WRITE_REQUESTS = createField(DSL.name("io_write_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_write</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_WRITE = createField(DSL.name("io_write"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_write_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_WRITE_LATENCY = createField(DSL.name("io_write_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_misc_requests</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_MISC_REQUESTS = createField(DSL.name("io_misc_requests"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * The column <code>sys.x$schema_table_statistics.io_misc_latency</code>.
     */
    public final TableField<X$schemaTableStatisticsRecord, BigInteger> IO_MISC_LATENCY = createField(DSL.name("io_misc_latency"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(42), this, "");

    /**
     * Create a <code>sys.x$schema_table_statistics</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_TABLE() {
        this(DSL.name("x$schema_table_statistics"), null);
    }

    /**
     * Create an aliased <code>sys.x$schema_table_statistics</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_TABLE(String alias) {
        this(DSL.name(alias), X$SCHEMA_TABLE_STATISTICS);
    }

    /**
     * Create an aliased <code>sys.x$schema_table_statistics</code> table reference
     */
    public X$SCHEMA_TABLE_STATISTICS_TABLE(Name alias) {
        this(alias, X$SCHEMA_TABLE_STATISTICS);
    }

    private X$SCHEMA_TABLE_STATISTICS_TABLE(Name alias, Table<X$schemaTableStatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$SCHEMA_TABLE_STATISTICS_TABLE(Name alias, Table<X$schemaTableStatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> X$SCHEMA_TABLE_STATISTICS_TABLE(Table<O> child, ForeignKey<O, X$schemaTableStatisticsRecord> key) {
        super(child, key, X$SCHEMA_TABLE_STATISTICS);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public X$SCHEMA_TABLE_STATISTICS_TABLE as(String alias) {
        return new X$SCHEMA_TABLE_STATISTICS_TABLE(DSL.name(alias), this);
    }

    @Override
    public X$SCHEMA_TABLE_STATISTICS_TABLE as(Name alias) {
        return new X$SCHEMA_TABLE_STATISTICS_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$SCHEMA_TABLE_STATISTICS_TABLE rename(String name) {
        return new X$SCHEMA_TABLE_STATISTICS_TABLE(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$SCHEMA_TABLE_STATISTICS_TABLE rename(Name name) {
        return new X$SCHEMA_TABLE_STATISTICS_TABLE(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, ULong, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
